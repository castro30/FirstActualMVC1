using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using FirstActualMVC.Models;
using FirstActualMVC.Models.ENTITIES;
using FirstActualMVC.Models.ConnectToDatabase;

namespace FirstActualMVC.Controllers
{
    public class CustomerController : Controller
    #region Autogenerated
    /*{
private KnockAroundDBContext db = new KnockAroundDBContext();

    // GET: Customer
    public ActionResult Index()
    {
        return View(db.Customer.ToList());
    }

    // GET: Customer/Details/5
    public ActionResult Details(decimal id)
    {
        if (id == null)
        {
            return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
        }
        tbl_customer tbl_customer = db.Customer.Find(id);
        if (tbl_customer == null)
        {
            return HttpNotFound();
        }
        return View(tbl_customer);
    }

    // GET: Customer/Create
    public ActionResult Create()
    {
        return View();
    }

    // POST: Customer/Create
    // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
    // more details see https://go.microsoft.com/fwlink/?LinkId=317598.
    [HttpPost]
    [ValidateAntiForgeryToken]
    public ActionResult Create([Bind(Include = "CUSTOMER_ID,CUST_NAME,CITY,GRADE,SALESMAN_ID")] tbl_customer tbl_customer)
    {
        if (ModelState.IsValid)
        {
            db.Customer.Add(tbl_customer);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        return View(tbl_customer);
    }

    // GET: Customer/Edit/5
    public ActionResult Edit(decimal id)
    {
        if (id == null)
        {
            return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
        }
        tbl_customer tbl_customer = db.Customer.Find(id);
        if (tbl_customer == null)
        {
            return HttpNotFound();
        }
        return View(tbl_customer);
    }

    // POST: Customer/Edit/5
    // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
    // more details see https://go.microsoft.com/fwlink/?LinkId=317598.
    [HttpPost]
    [ValidateAntiForgeryToken]
    public ActionResult Edit([Bind(Include = "CUSTOMER_ID,CUST_NAME,CITY,GRADE,SALESMAN_ID")] tbl_customer tbl_customer)
    {
        if (ModelState.IsValid)
        {
            db.Entry(tbl_customer).State = EntityState.Modified;
            db.SaveChanges();
            return RedirectToAction("Index");
        }
        return View(tbl_customer);
    }

    // GET: Customer/Delete/5
    public ActionResult Delete(decimal id)
    {
        if (id == null)
        {
            return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
        }
        tbl_customer tbl_customer = db.Customer.Find(id);
        if (tbl_customer == null)
        {
            return HttpNotFound();
        }
        return View(tbl_customer);
    }

    // POST: Customer/Delete/5
    [HttpPost, ActionName("Delete")]
    [ValidateAntiForgeryToken]
    public ActionResult DeleteConfirmed(decimal id)
    {
        tbl_customer tbl_customer = db.Customer.Find(id);
        db.Customer.Remove(tbl_customer);
        db.SaveChanges();
        return RedirectToAction("Index");
    }

    protected override void Dispose(bool disposing)
    {
        if (disposing)
        {
            db.Dispose();
        }
        base.Dispose(disposing);
    }
}
}
*/
    #endregion
    {
        DbModel dbmodel = new DbModel();

        public ActionResult Customer()
        {
            ViewBag.Message = "Customers.";
            List<tbl_customer> customer = dbmodel.GetAllCustomers();
            return View(customer);
        }


        public ActionResult Edit(int id)
        {
            tbl_customer customer = dbmodel.GetCustomer(id);
            return View(customer);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit(tbl_customer customerRow)
        {
            if (ModelState.IsValid)
            {
                dbmodel.EditTheCustomer(customerRow);
                return RedirectToAction("Customer");
            }

            return View(customerRow);
        }

        #region CustDetail
        public ActionResult CustomerDetail(int id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }

            tbl_customer custdetail = dbmodel.CustomerDetails(id);
            return View(custdetail);

        }
        #endregion
        public ActionResult CreateCustomer()
        {
            return View(new tbl_customer
            {
                CUSTOMER_ID = 5,
                CUST_NAME = "Name",
                CITY = "City",
                GRADE = 100,
                SALESMAN_ID = 5006
            });
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult CreateCustomer(tbl_customer customerRow)
        {

            if (ModelState.IsValid)
            {
                dbmodel.CreateNewCustomer(customerRow);
                return RedirectToAction("customerRow");
            }

            return View(customerRow);
        }
    }
}